{"version":3,"file":"use-toast.jsx","names":["React","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Symbol","iterator","constructor","prototype","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","l","u","a","next","done","push","value","length","Array","isArray","_objectDestructuringEmpty","_extends","assign","bind","arguments","apply","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","name","from","test","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","_toPrimitive","toPrimitive","String","Number","TOAST_LIMIT","TOAST_REMOVE_DELAY","actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","genId","MAX_SAFE_INTEGER","toastTimeouts","Map","addToRemoveQueue","toastId","timeout","setTimeout","dispatch","type","reducer","exports","state","action","toasts","toast","concat","map","id","undefined","open","listeners","memoryState","listener","_ref","props","update","dismiss","onOpenChange","useToast","_React$useState","useState","_React$useState2","setState","useEffect","index","indexOf","splice"],"sources":["../../src/hooks/use-toast.ts"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n"],"mappings":"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","ignoreList":[]}